/* natUIve – Grid */

@import 'natuive-setup';

/* For proper fallback, use .col* for all columns. Automatic column width (no .col*) works for Flexbox only. */

.row {

	width: 100%;
// 	margin: $line-height/2 0;
	font-size: 0; /* No space between inline-block elements */
	display: block;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	 -webkit-justify-content: center;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	text-align: center;
	justify-content: space-between;

}

	.row > * {
	
		vertical-align: top;
		position: relative;
		padding: 0 $line-height/2;
		word-wrap: break-word;
		font-size: $font-size;
		font-size: 1rem;
		display: inline-block;
		-webkit-flex: 1 0 auto;
		-ms-flex: 1 0 auto;
		flex: 1 0 auto;
		width: 20%; /* Minimum col width */
		text-align: left;
		text-align: start;
		padding: $line-height/2;
		margin: $line-height/2 0;

	}
	
	.row * .row {

		margin: -$line-height/2;
		width: calc(100% + #{$line-height});
		max-width: none;
		padding: 0;

	}
	
	.row > * > * {
		
		max-width: 100%; /* instead of overflow-x:hidden, which would also activate overflow-y:hidden and clip the tooltip */
		
	}
/* colXY where the column takes up X/Y of space; colY means 1/Y */
	.row > .col23 { // body used for rules override

		width: 66.6%;
		flex: 0 0 calc(66.6% - #{$line-height/2});

	}
	
	.row > .col34 {

		width: 75%;
		flex: 0 0 calc(75% - #{$line-height/2});

	}

	.row > .col4 {

		width: 25%;
		flex: 0 0 calc(25% - #{$line-height/2});

	}

	.row > .col5 {

		width: 20%;
		flex: 0 0 calc(20% - #{$line-height/2});

	}

	.row > .col25 {

		width: 40%;
		flex: 0 0 calc(40% - #{$line-height/2});

	}

	.row > .col35 {

		width: 60%;
		flex: 0 0 calc(60% - #{$line-height/2});

	}

	.row > .col45 {

		width: 80%;
		flex: 0 0 calc(80% - #{$line-height/2});

	}

	.row > .col3 {

		width: 33.333%;
		flex: 0 0 calc(33.333% - #{$line-height/2});

	}

	.row > .col2 {

		width: 50%;
		flex: 0 0 calc(50% - #{$line-height/2});

	}
	
	.row > .col1, .row > *:only-child {

		width: 100%;
		flex: 0 0 calc(100% - #{$line-height/2});

	}
	
	.row > *, .slider > *, .aspect > * { /* Restore font-size of zeroed elements' children */
		
		line-height: $line-height;
		min-height: $line-height;
		font-size: $font-size;
		font-size: 1rem;
		
	}
	
	.row > * > img {
		
		display: block;
		margin: 0 auto;
		
	}

	@media screen and (max-width: 1024px) {
	
		.row > * {
			
			width: 25%;
		
		}
	
	}
	
	@media screen and (max-width: 768px) {
	
		.row > * {
			
			width: 33%;
		
		}
	
	}
	
	.row.no-padding, .row.no-padding > * {
		
		padding: 0;
	
	}
	
.align-left, .row > .align-left {
	
	text-align: left;
	text-align: start;

}

.align-right, .row > .align-right {
	
	text-align: right;	
	text-align: end;

}

.align-center, .row > .align-center {
	
	text-align: center;

}

.row > .align-top, .row > .align-middle, .row > .align-bottom {
	
	display: inline-block;
	display: flex;
	
}

.align-top, .row > .align-top {
	
	vertical-align: top;
	justify-content: flex-start;
	flex-direction: column;
	
}

.align-middle, .row > .align-middle {
	
	vertical-align: middle;
	justify-content: center;
	flex-direction: column;
	
}

.align-bottom, .row > .align-bottom {
	
	vertical-align: bottom;
	justify-content: flex-end;
	flex-direction: column;

}

/* Masonry in CSS only */

.masonry {

    -moz-column-count: 3;
    -moz-column-gap: $line-height/2;
    -webkit-column-count: 3;
    -webkit-column-gap: $line-height/2;
    column-count: 3;
    column-gap: $line-height/2;

}

    .masonry > * {

        display: inline-block; /* Display inline-block, and absolutely NO FLOATS! */
        margin-bottom: $line-height;
        width: 100%;
        -webkit-column-break-inside: avoid;
		page-break-inside: avoid;           /* FF 20+ */
		break-inside: avoid-column;

    }

.pad {
	
	padding: $line-height/2;

}
	
	.pad-x2 {
		
		padding: $line-height;
	
	}

.row.border {

	border: 1px solid #999;
	padding: 0;

}
		
	.row.border > * {
		
		border-left: 1px solid #999;
		
	}

	.row.border > *:first-child {
		
		border-left: none;
		
	}
	
	.row * .box { /* Boxes inside grid cells */
		
		background: #fff;
		border: 1px solid #e6e6e6;
		
	}
	
	.row.border-all {
		
		border: 1px solid;
		padding: 0;
		margin: 0;
		width: 100%;
		margin: 0 auto;

	}
	
	.row.border-all > *, .row.border-all .row > * {
		
		padding: $line-height/2;
		
	}
	
	.row.border-all .row > * {
		
		margin: 0;
		
	}
	
	.row.border-all .row:first-child > * {
		
		margin: $line-height/2 0;
		
	}
	
	.row.border-all > *:only-child {
		
		flex: 0 0 100%;
		
	}
	
	.row.border-all > *:not(:first-child), .row.border-all .row > *:not(:first-child) {
		
		border-left: 1px solid;
		
	}
	
	.row.border-all .row {
		
		border-top: 1px solid;
		padding-top: 0;
		margin-top: -($line-height*3/2);
		
	}

	.row.border-all * .row:not(:first-child) {
		
		margin-top: 0;
		margin-bottom: 0
		
	}

	.row.border-all, .row.border-all .row, .row.border-all > *:not(:first-child), .row.border-all .row > *:not(:first-child) {
		
		border-color: #ddd;
		
	}
	
	.row.border-all .row:first-child {
		
		border-top: none;
		
	}

	.row.border-all .row .row:first-child {
		
		margin-top: -$line-height;
		
	}

	.row.border-all .row:last-child {
		
		padding-bottom: 0;
		margin-bottom: -$line-height;
		
	}
	
	.row.border-all .row .row:last-child {
		
		margin-bottom: -$line-height/2;
		
	}
	
	.row.border-all .row.border-off > * {
		
		border: none;

	}
	
	.row.no-spacing {
		
		padding: 0;
		margin: 0;

	}
	
	.row.no-spacing > * {
		
		font-size: 0;
		padding: 0;
		margin: 0;

	}
	
	.row.no-spacing > * > * {
		
		font-size: 1rem;

	}
	
	.row.spacing-horizontal > * {
		
		margin: 0 $line-height/2;

	}
	
	.row.spacing-vertical > * {
		
		margin: $line-height/2 0;

	}

@media screen and (max-width: $screen-narrow) {

	.row * .row {
		
		margin: 0;
		width: 100%;

	}

	.row > *, .row > [class^=col] {

		display: block;
		padding: $line-height/4;
		width: 100% !important; // Important because of Android Browser
		border: none;
		flex: 0 0 100% !important;

	}

	.no-mobile-gutter.row > * {
		
		padding: 0;

	}
	
	.row > *, .row.border, .row.border > * {

		border: none;

	}

	.row * .row > * {

		padding: $line-height/3 0;

	}
	
	.row.half > * {
		
		width: 50% !important;
		flex: 0 0 50%;

	}

	.row.border {
		
		padding: $line-height/4 0;

	}
	
	.row.border-all .row {
		
		margin: 0;

	}

	.row.border-all .row .row {
		
		margin-left: -$line-height/2;
		width:calc(100% + #{$line-height});

	}
	
	.row.border-all > *:not(:first-child), .row.border-all .row>*:not(:first-child) {
		
		border-left: none;

	}

	.masonry {
		
	    -moz-column-count: 2;
	    -webkit-column-count: 2;
	    column-count: 2;
		
	}

}
