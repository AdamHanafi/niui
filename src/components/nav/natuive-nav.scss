/* natUIve – Navigation */

@import '../../css/natuive-setup';

.n-nav {
	
	vertical-align: baseline;
	display: inline-block;
	background-color: transparent;
	background-color: var(--control-bg, transparent);
	color: inherit;
	color: var(--control-color, inherit);

	ul {
	
		margin: 0 0 0 -.5em;
		margin: 0;
		padding: 0;
		display: inline-block;
		width: auto;
		list-style: none;
		display: flex;
	    flex-wrap: wrap;

		li {
		
			margin: 0;
		
			&:last-child {
		
				margin-right: 0;
		
			}
	
		}
	
	}
	
	&.n-nav--scroll {
		
		overflow: auto;
		max-width: 100%;
		
		> ul {
			
			display: flex;
		    padding: .25em 0;
			flex-wrap: nowrap;
			white-space: nowrap;
	    		
		}
	
	}

	a {
		
		position: relative;
		padding: 0 .25em;

	}
	
	.active a[href] {
		
		text-decoration: none;
		opacity: .7;

	}
	
	&:not(.n-drop) a[href^='#'] {
		
		text-decoration: none;

	}
	
	&.n-row {
		
		display: inline-flex;
	
	}
	
}

@supports (--a: 1) {
	
	.n-nav--scroll {
		
		a {
		
			padding: 0;

		}
		
		> ul {
	
		    overflow: auto;
		    max-width: 100%;
		    transform: translate3d(0, 0, 0); // Safari macOS bug fix when using scrollbars: Not working initially.
		    -webkit-overflow-scrolling: touch;
	
		}
	
		ul li {
	
		    padding: $line-height-em/2;
	
		}
	
	}

}

main .n-nav ul {

	padding-left: 0;

}
	
// Drop nav

$bg: inherit; // fallback for browsers unsupporting CSS variables

.n-drop {

    color: #333;
    color: var(--control-color, #333);
    background-color: transparent;

	ul {
		
		padding: 0;
		margin: 0;
		min-height: 0;
		z-index: 1;
	
	}
	
	ul ul {
		
		padding: 0;
		position: absolute;
		left: 0;
		top: 100%;
		transition: transform .2s ease-in-out;
	    transform-origin: top;
		transform: scaleY(0);
	
	}
	
	ul ul ul {
		
		margin-left: 100%;
		top: 0;
	
	}
	
	ul li {
		
		display: inline-block;
		vertical-align: top;
		margin: 0;
		padding: 0;
		box-sizing: border-box;
		position: relative;
		width: auto;
		background-color: #fff;
		background-color: var(--control-bg, #fff);
		
	}
	
	li:not([tabindex]) > ul ~ a {
	
		padding-right: 42px;
	
	}
	
	li > a {
		
		padding: .75em;
		display: block;
	
	}
	
	a:focus, li > :focus {
	
		outline-offset: -7px;
	
	}
	
	a[href] {
		
		position: relative;
	
	}
	
	li:not([aria-haspopup]) > a {
		
		z-index: 0;
		
	}
	
	ul[role=menubar] li > a {
		
	    margin-right: 0;
	    padding-right: 1em;
		
	}
	
	ul[role=menubar] li[aria-haspopup] > a {
		
	    margin-right: 0;
		padding-right: 1em;
		
	}
	
	li li {
		
		display: block;
/* 		width: 100%; */
	
	}
	
	ul ul:not([aria-expanded]) {
		
		min-height: 0;
		max-height: 0;
		overflow: hidden;
		position: absolute;
	
	}
	
	ul li > :checked ~ ul, :focus ~ ul, 
	a:focus ~ ul, ul ul[aria-expanded], li li ul[aria-expanded], li li:not(:focus) :checked ~ ul {
		
		max-height: none;
		overflow: visible;
		opacity: 1;
		z-index: 2;
		background-color: #fff;
		background-color: var(--control-bg, #fff);

		transform: scaleY(1);
		
		ul {
			
			transform: scaleX(1);
			transform-origin: left;
			
		}
	
	}
	
	ul ul[aria-expanded], li li ul[aria-expanded], li li:not(:focus) :checked ~ ul {
	
		z-index: 2; // Problem with CSS-only input method
	
	}
	
	li > input {
		
		-webkit-appearance: none;
		-moz-appearance: none;
		display: block;
		position: absolute;
		width: 100%; // iOS doesn't work with left/right
		height: 100%; 
		border: none;
		border-radius: 0;
		right: 0;
		z-index: 1;
		width: 2em;
		margin: 0;
		font-size: inherit;
					
	}
	
	li[aria-haspopup]:before {
		
		content: '';
		position: absolute;
		display: block;
		right: 0;
		top: 0;
		width: 2em;
		height: 100%;
		
	}
	
	ul.n-list:not(.n-list--no-bullet):not(.n-list--inline) li:before {
	
	    content: '';
	
	}
	
	&.n-nav ul.n-list li:before {
	
	    display: block;
	    height: 100%;
	
	}

	li[aria-haspopup]:before, li > input {	

		-webkit-mask: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3EUntitled%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(180) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A") center center no-repeat;
		-webkit-mask-size: .5em;
		background-color: #000;
		background-color: var(--control-color, #000);

   	}

	&[data-ready] li > ul ~ a {
		
		background: none;
		
	}

	li li[aria-haspopup]:before, li li > input {
	
		-webkit-mask-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Ctitle%3EUntitled%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpolygon transform='translate(8 8) rotate(90) translate(-8 -8)' points='8 0 16 16 0 16' fill='%23000' fill-rule='nonzero'/%3E%3C/g%3E%3C/svg%3E%0A");
    
	}
	
	li[aria-haspopup] {
		
		padding-right: 2em;
					
	}

}
	
@media (min-width: 600px) {

	html:not(.can-touch) { // Hover rules here
		
		.n-drop {
		
			ul ul:not([aria-expanded]) ul {
			
				transition: .1s .2s;
				opacity: 0;
				position: absolute;
			    transform: scaleX(0);
				transform-origin: left;
			
			}
			
			> ul > li > ul li {
				
				background-color: #fff;
				background-color: var(--control-bg, #fff);
				
			}
	
			> ul 		> li:hover > input:not(:checked) ~ ul,
			> ul li ul 	> li:hover > input:not(:checked) ~ ul,
			> ul > li:not([aria-haspopup]):hover > input:not(:checked) ~ ul,
			> ul li:not([aria-haspopup]) ul li:hover > input:not(:checked) ~ ul {
				
				min-height: 0;
				max-height: 0;
				overflow: hidden;
				z-index: 1;
				position: absolute;
	
			}
	
			> ul > li:not([aria-haspopup]):hover > ul,
			> ul 		> li:hover > ul,
			> ul li ul 	> li:hover > ul,
			ul ul :checked ~ ul:not([aria-expanded]),
			> ul li:not([aria-haspopup]) ul li:hover ~ ul {
				
				max-height: none;
				overflow: visible;
				opacity: 1;
				z-index: 2;
				background-color: #fff;
				background-color: var(--control-bg, #fff);
				transform: scaleY(1);
				
			}
			
			> ul li ul li:hover ul {
	
				transition-delay: .2s;
				transform: scaleX(1);
	
			}
		
		}

	}

	nav.n-drop li {
		
		white-space: nowrap;
		
	}
	
	// IE11
	
	_:-ms-input-placeholder, :root nav.n-drop li:hover ul {
		
		overflow: visible !important;
		z-index: 2 !important;
		transform: none !important;

	}

	_:-ms-input-placeholder, :root nav.n-drop input[type=checkbox] {
		
		display: none !important;

	}

	_:-ms-input-placeholder, :root nav.n-drop li ul ~ a:before {
		
		content: '↓';
		position: absolute;
		top: .75em;
		right: .5em;
		text-decoration: none !important;

	}

	_:-ms-input-placeholder, :root nav.n-drop li li ul ~ a:before {
		
		content: '→';

	}

}

@media (max-width: $screen-narrow-max) {

	.n-drop ul {
	
		ul:not([aria-expanded]) {
			
			position: static;
		
		}

		ul {
			
			position: static;
			width: calc(100% + 42px);
			padding-left: .5em;
			overflow: hidden;
			box-sizing: border-box;
		
			ul {
				
				margin: 0;	
		
			}

		}
	
		li {
			
			width: 100%;
		
			> input, &[aria-haspopup] {
				
				background-position-y: 1.5em;
			
			}
		
			&[aria-haspopup] {
				
				padding-right: 42px;
							
			}
	
		}
	
	}

}
